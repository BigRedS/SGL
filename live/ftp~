#! /usr/bin/perl

use warnings;
use strict;

## There is no error checking on any of the configuration. 
## It is assumed this will only be edited by people with more than a vague idea of what they're doing.

my ${dir}="/mnt/london/ftp";		# Dir under which the documentroot of the ftp server is mounted
my ${server_name}="Jupiter";		# Human(e) name of the server
my ${share_name}="ftp";			# //${server_ip}/${share_name} should take me to the documentroot from a client
my ${server_ip}="10.0.7.4";		# See up
my ${volume_size}="8981970944";		# Maximum allowed size of dir (generally limited by physical volume size)
my ${warn_level}=40;			# % at which to send out soft warnings    Set either to >= 100 to disable 
my ${hard_level}=50;			# % at which to send out harder warnings 
my ${command} = "du -s";		# Command to use to get directory size
my ${kb} = "1024";			# How many bytes in a kilobyte? Common answers are 1000 and 1024 but anything numeric's valid

## Location of sendmail binary/equivalent, and some mail-related vars. 
## Need to null subject and body, since we're using strict
	
	## Email addresses _must_ be in ' ' not " " ##

my ${problem_address} = 'avi.greenbury@servicegraphics.co.uk';

my ${sendmail} = "/usr/sbin/sendmail -t";
my ${from} = 'From: FTP-Alerts';
my ${reply_to} = 'Reply-to: ${problem_address}';
my ${to} = 'To: avi.greenbury@servicegraphics.co.uk';
my ${subject} = "";
my ${body} = "";

## Thinking begins approximately here ##

## Get the dir size from du
my ${used} = qx/${command} ${dir}/;
${used} =(split /\t/,${used})[0];
${used} = ${used} * ${kb} ; 				# Multiply by ${kb} Since du returns kb, not b


## Calculate various handy sizes:
my ${volume_size_gb} = ${volume_size} / (${kb} * ${kb} * ${kb});
${volume_size_gb} = sprintf "%.1f", "${volume_size_gb} ";

my ${used_gb} = ${used}/( ${kb} * ${kb} * ${kb});
${used_gb} = sprintf "%.1f", "${used_gb}";

my ${free_space} = ${volume_size} - ${used};
my ${free_space_gb} = ${free_space} / ( ${kb} * ${kb} * ${kb});
${free_space_gb} = sprintf "%.1f", "${free_space_gb}";

my ${percent_used} = ( ${used} / ${volume_size} * 100 ); 
${percent_used} = sprintf "%.1f", "${percent_used}"; 

my ${warn_wanted_free_space} = ${volume_size} - ( (${warn_level}/100) * ${volume_size} );
my ${diff_to_warn} = ${warn_wanted_free_space} - ${free_space};
my ${diff_to_warn_gb} =  ${diff_to_warn} / ( ${kb} * ${kb} * ${kb} );
${diff_to_warn_gb} = sprintf "%.1f", "${diff_to_warn_gb}";

my ${hard_wanted_free_space} = ${volume_size} - ( (${hard_level}/100) * ${volume_size} );
my ${diff_to_hard} = ${hard_wanted_free_space} - ${free_space};
my ${diff_to_hard_gb} =  ${diff_to_hard} / ( ${kb} * ${kb} * ${kb} );
${diff_to_hard_gb} = sprintf "%.1f", "${diff_to_hard_gb}";


## Check sizes and compose mail
if ( ${percent_used} > ${hard_level} ) {
	${subject} = "Subject: ${server_name} FTP server is nearly full";
	${body} = "This is a warning email - disk usage on the ${server_name} FTP server is above ${hard_level}% full.\n";
	${body}.="Please free up some space ASAP so clients can get their work onto it.\n";
	${body}.="You need to clear ${diff_to_hard_gb}gb to avoid this message, and ${diff_to_warn_gb}gb to avoid all warnings.\n";

}elsif (${percent_used} > ${warn_level} ) {

	${subject} = "Subject: ${server_name} FTP server is ${percent_used}% full";
	${body} = "Just a friendly notice that the disk usage on the FTP server is above the warn level of ${warn_level} full\n";
	${body}.= "This is probably not urgent, depending on how sensibly the warn level was set\n\n";
	${body}.= "To avoid more notices like this, you should clear ${diff_to_warn_gb}gb.\n"
}

	${body}.="You can (probably) find the server at: \n";
	${body}.="\t FTP: \t ftp://${server_ip} \n";
	${body}.="\t SMB: \t smb://${server_ip}/${share_name} \n";
	${body}.="\t Win: \t \\\\${server_ip}\\${share_name} \n\n";
	${body}.="Total volume size:\t${volume_size_gb}gb\n";
	${body}.="Current used space:\t${used_gb}gb\n";
	${body}.="Current free space:\t${free_space_gb}gb\n\n\n\n";
	${body}.="Any problems, mail me on ${problem_address}\n";
	${body}.="if you complain about the rounding errors, I'll make it report in bytes ;)";


## Send mail if you like
if ( ${percent_used} > ${warn_level} ) {

	open (MAIL, "|${sendmail}") ||  die "Ooop! couldn't open ${sendmail}";
		print MAIL "${to}", "\n";
		print MAIL "${from}", "\n";
		print MAIL "${reply_to}", "\n";
		print MAIL "${subject}","\n";
		print MAIL "${body}","\n";
	close MAIL;
}
